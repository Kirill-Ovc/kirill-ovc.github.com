{"version":3,"sources":["containers/PrivateRoute.js","components/NotFound.js","components/Home.js","components/Book.js","components/BookList.js","components/News.js","utils/network.js","actions/NewsActions.js","containers/NewsContainer.js","components/Profile.js","containers/ProfileContainer.js","utils/session.js","actions/SessionActions.js","components/LoginPage.js","routes.js","components/About.js","containers/LoginContainer.js","components/NavigationBar.js","App.js","serviceWorker.js","reducers/session.js","reducers/news.js","reducers/index.js","index.js"],"names":["connect","state","isAuth","sessionReducer","user","_ref","Component","component","rest","Object","objectWithoutProperties","react_default","a","createElement","Route","assign","render","props","Redirect","to","pathname","from","location","errorMsg","NotFound","data","Fragment","Home","Book","style","width","reactstrap_es","body","React","BookList","match","this","BrowserRouter","Link","concat","path","News","_this$props","newsData","getNews","articles","news","isLoading","color","length","console","log","map","article","index","id","key","className","src","urlToImage","alt","title","author","publishedAt","description","href","url","NewsArticle","httpGet","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","prev","next","fetch","sent","ok","status","abrupt","Error","t0","warn","stop","_x","apply","arguments","GET_NEWS_REQUEST","GET_NEWS_SUCCESS","GET_NEWS_FAIL","newsArr","cached","newsAPIurl","NewsContainer","newsState","components_News","newsReducer","dispatch","type","payload","then","catch","e","error","Profile","ProfileContainer","Profile_Profile","_username","_password","LOG_IN","LOG_OUT","LOG_IN_FAILURE","logIn","params","cb","username","toLowerCase","password","checkCredidentials","name","LoginPage","redirectToPreviousRoute","handleSubmit","preventDefault","_this$state","_this","setState","handleChange","value","currentTarget","fieldName","objectSpread","defineProperty","renderForm","_this$state2","onSubmit","row","for","sm","onChange","placeholder","check","size","errorMsg2","routes","isNavBar","isExact","isPrivate","NavigationBar","appPath","light","expand","navbar","filter","route","tag","exact","App","window","replace","components_NavigationBar","Switch","RouteType","PrivateRoute","isLocalhost","Boolean","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","combineReducers","undefined","action","message","middleware","thunk","store","createStore","reducer","applyMiddleware","ReactDOM","es","src_App","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.bacab700.chunk.js","sourcesContent":["import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst needAuth = 'Необходимо авторизоваться для просмотра этой страницы'\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        rest.isAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: '/login',\r\n                state: {\r\n                  from: props.location,\r\n                  errorMsg: needAuth,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.sessionReducer.user,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)","import React from 'react'\r\n\r\nconst NotFound = ({ data }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Страница не найдена</h2>\r\n      <p>Попробуйте другую</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default NotFound","import React from 'react'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Домашняя страница</h2>\r\n      <p>Раздел в разработке</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default Home","import React from 'react'\r\nimport {\r\n  Card, CardText, CardTitle, Button\r\n} from 'reactstrap';\r\n\r\nexport default class Book extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: '300px' }}>\r\n        <Card body >\r\n          <CardTitle>Card title</CardTitle>\r\n          <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n          <Button>ReadMore</Button>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\nimport React from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Book from './Book'\r\n\r\nclass BookList extends React.Component {\r\n  render() {\r\n    const { match } = this.props\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <h3>Выберите серию:</h3>\r\n          <p>\r\n            <Link to={`${match.path}/potter`}>Гарри Поттер</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`${match.path}/lord`}>Властелин колец</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`${match.path}/gatsby`}>Великий Гетсби</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`${match.path}/thecatcherintherye`}>Над пропастью во ржи</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`${match.path}/thegodfather`}>Крестный отец</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`${match.path}/thefinancier`}>Финансист</Link>\r\n          </p>\r\n          <hr />\r\n          <Route path={`${match.path}/potter`} component={Book} />\r\n          <Route path={`${match.path}/lord`} component={Book} />\r\n          <Route path={`${match.path}/gatsby`} component={Book} />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookList","import React from 'react'\r\nimport {\r\n  Card, CardBody, CardText, CardSubtitle, CardTitle, CardLink, Alert\r\n} from 'reactstrap';\r\n\r\nconst NewsArticle = (id, article) => {\r\n  return (\r\n    <div key={id}>\r\n      <Card>\r\n        <CardBody>\r\n          <img className=\"newsImage\" src={article.urlToImage} alt=\"Card article\" />\r\n          <hr />\r\n          <CardTitle>{article.title}</CardTitle>\r\n          <CardSubtitle>{article.author} / {article.publishedAt}</CardSubtitle>\r\n          <CardText>{article.description}.</CardText>\r\n          <CardLink href={article.url}>Go to Article</CardLink>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass News extends React.Component {\r\n  render() {\r\n    const { newsData, getNews } = this.props\r\n    const { news: articles, isLoading, errorMsg } = newsData;\r\n    if (errorMsg) {\r\n      return <Alert color=\"danger\">{errorMsg}</Alert>\r\n    }\r\n    if (isLoading && !articles.length) {\r\n      return <p>Новости загружаются...</p>\r\n    } else if (!articles.length) {\r\n      getNews()\r\n      return <p>Новостей нет</p>\r\n    } else {\r\n      console.log(articles)\r\n      return articles.map(\r\n        (article, index) => NewsArticle(index, article)\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default News\r\n","//const API_KEY = '8b9495da70cd4b10a74b003961c379c9'\r\n//const API_ROOT = `https://${API_KEY}.mockapi.io`\r\nconst API_ROOT = 'https://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=8b9495da70cd4b10a74b003961c379c9'\r\n\r\nexport const httpGet = async (url) => {\r\n  try {\r\n    const response = await fetch(url)\r\n    if (response.ok || (response.status && response.status === 'ok')) { // MockAPI предоставляет нам свойство \"ok\", на которое мы можем опереться\r\n      const json = await response.json()\r\n      return json\r\n    } else {\r\n      throw new Error(response.status)\r\n    }\r\n  } catch (err) {\r\n    console.warn('httpGet error ', err)\r\n  }\r\n}\r\n\r\n// либо такой же код, без async/await\r\nexport const httpGetWithoutAsync = (endPoint) => {\r\n  return fetch(`${API_ROOT}/${endPoint}`)\r\n    .then(response => response.json())\r\n    .then(json => json)\r\n}","import { httpGet } from '../utils/network'\r\nexport const GET_NEWS_REQUEST = 'GET_NEWS_REQUEST'\r\nexport const GET_NEWS_SUCCESS = 'GET_NEWS_SUCCESS'\r\nexport const GET_NEWS_FAIL = 'GET_NEWS_FAIL'\r\nlet newsArr = []\r\nlet cached = false\r\n\r\nconst newsAPIurl = 'https://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=8b9495da70cd4b10a74b003961c379c9'\r\n\r\nexport function getNews() {\r\n  return function (dispatch) {\r\n    if (cached) {\r\n      dispatch({\r\n        type: GET_NEWS_SUCCESS,\r\n        payload: {\r\n          data: newsArr\r\n        }\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: GET_NEWS_REQUEST,\r\n        payload: {\r\n          data: newsArr\r\n        }\r\n      })\r\n      httpGet(newsAPIurl).then(json => {\r\n        newsArr = json.articles\r\n        cached = true\r\n        dispatch({\r\n          type: GET_NEWS_SUCCESS,\r\n          payload: {\r\n            data: newsArr\r\n          }\r\n        })\r\n      }).catch((e) => dispatch({\r\n        type: GET_NEWS_FAIL,\r\n        payload: new Error(e),\r\n        error: true,\r\n      }))\r\n    }\r\n  }\r\n}\r\n\r\n// const testnews = [\r\n//   {\r\n//     \"title\": \"new1\",\r\n//     \"text\": \"something about it.\"\r\n//   },\r\n//   {\r\n//     \"title\": \"test\",\r\n//     \"text\": \"Lets test the news.\"\r\n//   },\r\n// ]","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport News from '../components/News'\r\nimport { getNews } from '../actions/NewsActions'\r\n\r\nclass NewsContainer extends React.Component {\r\n  render() {\r\n    const { newsState, getNews } = this.props\r\n    return <News newsData={newsState} getNews={getNews} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  newsState: state.newsReducer,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getNews: () => dispatch(getNews())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsContainer)","import React from 'react'\r\n\r\nexport default class Profile extends React.Component {\r\n  render() {\r\n    return (<div>\r\n      Профиль пользователя\r\n    </div>)\r\n  }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from '../components/Profile'\r\n\r\nclass ProfileContainer extends React.Component {\r\n  render() {\r\n    const { user } = this.props\r\n    return <Profile user={user} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.sessionReducer.user,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer)","const _username = 'admin'\r\nconst _password = '12345'\r\n\r\nexport function checkCredidentials(params) {\r\n  if (\r\n    params.username.toLowerCase() === _username &&\r\n    params.password === _password\r\n  ) {\r\n    return true\r\n  }\r\n  return false\r\n}","import { checkCredidentials } from '../utils/session'\r\n\r\nexport const LOG_IN = 'LOG_IN'\r\nexport const LOG_OUT = 'LOG_OUT'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport function logIn(params, cb) {\r\n  return dispatch => {\r\n    if (checkCredidentials(params)) {\r\n      dispatch({\r\n        type: LOG_IN,\r\n        payload: {\r\n          name: params.username,\r\n        }\r\n      })\r\n      cb()\r\n    } else {\r\n      dispatch({\r\n        type: LOG_IN_FAILURE,\r\n        payload: {\r\n          errorMsg: 'Неверное имя пользователя или пароль',\r\n        },\r\n        error: true,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function logOut() {\r\n  return {\r\n    type: LOG_OUT,\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, FormGroup, Label, Input, Col, Alert } from 'reactstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LoginPage extends React.Component {\r\n  state = {\r\n    redirectToPreviousRoute: false,\r\n    username: '',\r\n    password: '',\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { username, password } = this.state\r\n\r\n    this.props.logIn(\r\n      {\r\n        username,\r\n        password\r\n      },\r\n      () => {\r\n        this.setState({ redirectToPreviousRoute: true })\r\n      }\r\n    )\r\n  }\r\n  handleChange = e => {\r\n    const value = e.currentTarget.value\r\n    const fieldName = e.currentTarget.name\r\n\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      [fieldName]: value,\r\n    }))\r\n  }\r\n  renderForm = () => {\r\n    const { username, password } = this.state\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormGroup row>\r\n          <Label for=\"login\" sm={2} >Login</Label>\r\n          <Col sm={5}>\r\n            <Input\r\n              value={username}\r\n              onChange={this.handleChange}\r\n              type=\"text\" name=\"username\" id=\"login\" placeholder=\"UserName\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label for=\"password\" sm={2} >Password</Label>\r\n          <Col sm={5}>\r\n            <Input\r\n              value={password}\r\n              onChange={this.handleChange}\r\n              type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup check row>\r\n          <Col sm={{ size: 10 }}>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" />{' '}\r\n                Confirm\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n        <hr />\r\n        <FormGroup check row>\r\n          <Col sm={{ size: 10 }}>\r\n            <Button type=\"submit\">Submit</Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n    )\r\n  }\r\n  render() {\r\n    const { location, errorMsg } = this.props\r\n    const { from, errorMsg: errorMsg2 } = location.state || { from: { pathname: '/' } }\r\n    const { redirectToPreviousRoute } = this.state\r\n    if (redirectToPreviousRoute) {\r\n      return <Redirect to={from} />\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {(errorMsg || errorMsg2) &&\r\n          <Alert color=\"danger\">{(errorMsg || errorMsg2)}</Alert>\r\n        }\r\n        {this.renderForm()}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLoginPage.propTypes = {\r\n  logIn: PropTypes.func.isRequired,\r\n  errorMsg: PropTypes.string,\r\n}\r\n\r\nexport default LoginPage","import Home from './components/Home'\r\nimport BookList from './components/BookList'\r\nimport NewsContainer from './containers/NewsContainer'\r\nimport ProfileContainer from './containers/ProfileContainer'\r\nimport LoginContainer from './containers/LoginContainer'\r\nimport About from './components/About'\r\n\r\nexport const routes = [\r\n  {\r\n    isNavBar: true,\r\n    isExact: true,\r\n    path: '/',\r\n    name: 'На главную',\r\n    component: Home\r\n  },\r\n  {\r\n    isNavBar: true,\r\n    path: '/news',\r\n    name: 'Новости',\r\n    component: NewsContainer\r\n  },\r\n  {\r\n    isNavBar: true,\r\n    path: '/books',\r\n    name: 'Книги',\r\n    component: BookList\r\n  },\r\n  {\r\n    isNavBar: true,\r\n    path: '/movies',\r\n    name: 'Фильмы',\r\n  },\r\n  {\r\n    isNavBar: true,\r\n    path: '/about',\r\n    name: 'О приложении',\r\n    component: About\r\n  },\r\n  {\r\n    isNavBar: false,\r\n    path: '/profile',\r\n    name: 'Профиль',\r\n    component: ProfileContainer,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    isNavBar: false,\r\n    path: '/login',\r\n    name: 'Войти',\r\n    component: LoginContainer,\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { Alert, NavLink } from 'reactstrap'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <p> Тестовое приложение. Сделано на ReactJS + Router + Redux + Bootstrap</p>\r\n      <Alert color=\"info\">\r\n        <NavLink href=\"https://github.com/Kirill-Ovc/ReactRouterTestApp\">GitHub</NavLink>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","\r\nimport { connect } from 'react-redux'\r\nimport { logIn } from '../actions/SessionActions'\r\nimport LoginPage from '../components/LoginPage'\r\n\r\nconst mapStateToProps = state => ({\r\n  errorMsg: state.sessionReducer.errorMsg,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logIn: (params, cb) => dispatch(logIn(params, cb))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import React from 'react'\r\nimport { Navbar, Nav, NavLink, NavItem } from 'reactstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavigationBar = (props) => {\r\n  const { appPath } = props\r\n  return (\r\n    <Navbar color=\"light\" light expand=\"sm\">\r\n      <Nav navbar>\r\n        {props.routes.filter(route => route.isNavBar).map((route, index) =>\r\n          <NavItem key={index} >\r\n            <NavLink tag={Link} exact={route.isExact ? 1 : 0} to={appPath + route.path}>{route.name}</NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n      <Nav navbar className=\"ml-auto\">\r\n        {props.routes.filter(route => !route.isNavBar).map((route, index) =>\r\n          <NavItem key={index} >\r\n            <NavLink tag={Link} to={appPath + route.path}>{route.name}</NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavigationBar","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from './containers/PrivateRoute'\nimport NotFound from './components/NotFound'\nimport { routes } from './routes'\nimport NavigationBar from './components/NavigationBar'\n\nconst App = () => {\n  const appPath = window.location.pathname.replace(/\\/$/, \"\");\n  const renderSwitch = () => (\n    <Switch>\n      {routes.map(route => {\n        const RouteType = route.isPrivate ? PrivateRoute : Route\n        return (\n          <RouteType\n            key={route.path}\n            exact={route.isExact}\n            path={appPath + route.path}\n            component={route.component || NotFound}\n          />\n        )\n      })}\n      <Route component={NotFound} />\n    </Switch>\n  );\n  return (\n    <Router>\n      <div>\n        <NavigationBar routes={routes} appPath={appPath} />\n        <hr />\n        <div className=\"centerBlock\">\n          {renderSwitch()}\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOG_IN, LOG_OUT, LOG_IN_FAILURE } from '../actions/SessionActions'\r\n\r\nconst initialState = {\r\n  user: null,\r\n  errorMsg: '',\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          name: action.payload.name,\r\n        },\r\n        errorMsg: '',\r\n      }\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        errorMsg: '',\r\n      }\r\n    case LOG_IN_FAILURE:\r\n      return {\r\n        ...state,\r\n        errorMsg: action.payload.errorMsg,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { GET_NEWS_REQUEST, GET_NEWS_SUCCESS, GET_NEWS_FAIL } from '../actions/NewsActions'\r\n\r\nconst initialState = {\r\n  news: [],\r\n  isLoading: false,\r\n  errorMsg: '',\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_NEWS_REQUEST:\r\n      return { ...state, news: action.payload.data, isLoading: true, errorMsg: '' }\r\n    case GET_NEWS_SUCCESS:\r\n      return (action.payload.data.length)\r\n        ? { ...state, news: action.payload.data, isLoading: false, errorMsg: '' }\r\n        : { ...state, news: action.payload.data, isLoading: false, errorMsg: 'Новостей нет' }\r\n    case GET_NEWS_FAIL:\r\n      return { ...state, errorMsg: action.payload.message, isLoading: false }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport sessionReducer from './session'\r\nimport newsReducer from './news'\r\n\r\nexport default combineReducers({\r\n  sessionReducer,\r\n  newsReducer,\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\n\n\nconst middleware = [thunk]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\nconst store = createStore(reducer, applyMiddleware(...middleware))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister()\n"],"sourceRoot":""}