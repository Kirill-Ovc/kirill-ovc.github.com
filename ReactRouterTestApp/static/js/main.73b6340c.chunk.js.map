{"version":3,"sources":["components/Home.js","components/Book.js","components/BookList.js","components/News.js","utils/network.js","actions/NewsActions.js","containers/NewsContainer.js","components/Profile.js","containers/ProfileContainer.js","utils/session.js","actions/SessionActions.js","components/LoginPage.js","routes.js","components/About.js","containers/LoginContainer.js","containers/PrivateRoute.js","components/NotFound.js","components/NavigationBar.js","App.js","serviceWorker.js","reducers/session.js","reducers/news.js","reducers/index.js","index.js"],"names":["Home","react_default","a","createElement","Fragment","Book","style","width","reactstrap_es","body","React","Component","BookList","match","this","props","BrowserRouter","Link","to","concat","path","Route","component","News","_this$props","newsData","getNews","articles","news","isLoading","errorMsg","color","length","console","log","map","article","index","id","key","className","src","urlToImage","alt","title","author","publishedAt","description","href","url","NewsArticle","httpGet","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","response","json","wrap","_context","prev","next","fetch","sent","ok","status","abrupt","Error","t0","warn","stop","_x","apply","arguments","GET_NEWS_REQUEST","GET_NEWS_SUCCESS","GET_NEWS_FAIL","newsArr","cached","newsAPIurl","NewsContainer","newsState","components_News","connect","state","newsReducer","dispatch","type","payload","data","then","catch","e","error","Profile","ProfileContainer","user","Profile_Profile","sessionReducer","_username","_password","LOG_IN","LOG_OUT","LOG_IN_FAILURE","logIn","params","cb","username","toLowerCase","password","checkCredidentials","name","LoginPage","redirectToPreviousRoute","handleSubmit","preventDefault","_this$state","_this","setState","handleChange","value","currentTarget","fieldName","objectSpread","defineProperty","renderForm","_this$state2","onSubmit","row","for","sm","onChange","placeholder","check","size","location","from","pathname","errorMsg2","Redirect","routes","isNavBar","isExact","isPrivate","isAuth","rest","objectWithoutProperties","assign","render","appPath","NotFound","NavigationBar","light","expand","navbar","filter","route","tag","exact","App","components_NavigationBar","Switch","RouteType","PrivateRoute","isLocalhost","Boolean","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","initialState","combineReducers","undefined","action","message","middleware","thunk","store","createStore","reducer","applyMiddleware","ReactDOM","es","src_App","document","getElementById","URL","process","origin","addEventListener","contentType","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.73b6340c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Home = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Домашняя страница</h2>\r\n      <p>Раздел в разработке</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\nexport default Home","import React from 'react'\r\nimport {\r\n  Card, CardText, CardTitle, Button\r\n} from 'reactstrap';\r\n\r\nexport default class Book extends React.Component {\r\n  render() {\r\n    return (\r\n      <div style={{ width: '300px' }}>\r\n        <Card body >\r\n          <CardTitle>Card title</CardTitle>\r\n          <CardText>Some quick example text to build on the card title and make up the bulk of the card's content.</CardText>\r\n          <Button>ReadMore</Button>\r\n        </Card>\r\n      </div>\r\n    )\r\n  }\r\n}","\r\nimport React from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport Book from './Book'\r\n\r\nclass BookList extends React.Component {\r\n  render() {\r\n    const { match } = this.props\r\n    return (\r\n      <Router>\r\n        <div>\r\n          <h3>Выберите серию:</h3>\r\n          <p>\r\n            <Link to={`${match.path}/potter`}>Гарри Поттер</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`${match.path}/lord`}>Властелин колец</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`${match.path}/gatsby`}>Великий Гетсби</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`${match.path}/thecatcherintherye`}>Над пропастью во ржи</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`${match.path}/thegodfather`}>Крестный отец</Link>\r\n          </p>\r\n          <p>\r\n            <Link to={`${match.path}/thefinancier`}>Финансист</Link>\r\n          </p>\r\n          <hr />\r\n          <Route path={`${match.path}/potter`} component={Book} />\r\n          <Route path={`${match.path}/lord`} component={Book} />\r\n          <Route path={`${match.path}/gatsby`} component={Book} />\r\n        </div>\r\n      </Router>\r\n    )\r\n  }\r\n}\r\n\r\nexport default BookList","import React from 'react'\r\nimport {\r\n  Card, CardBody, CardText, CardSubtitle, CardTitle, CardLink, Alert\r\n} from 'reactstrap';\r\n\r\nconst NewsArticle = (id, article) => {\r\n  return (\r\n    <div key={id}>\r\n      <Card>\r\n        <CardBody>\r\n          <img className=\"newsImage\" src={article.urlToImage} alt=\"Card article\" />\r\n          <hr />\r\n          <CardTitle>{article.title}</CardTitle>\r\n          <CardSubtitle>{article.author} / {article.publishedAt}</CardSubtitle>\r\n          <CardText>{article.description}.</CardText>\r\n          <CardLink href={article.url}>Go to Article</CardLink>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  )\r\n}\r\n\r\nclass News extends React.Component {\r\n  render() {\r\n    const { newsData, getNews } = this.props\r\n    const { news: articles, isLoading, errorMsg } = newsData;\r\n    if (errorMsg) {\r\n      return <Alert color=\"danger\">{errorMsg}</Alert>\r\n    }\r\n    if (isLoading && !articles.length) {\r\n      return <p>Новости загружаются...</p>\r\n    } else if (!articles.length) {\r\n      getNews()\r\n      return <p>Новостей нет</p>\r\n    } else {\r\n      console.log(articles)\r\n      return articles.map(\r\n        (article, index) => NewsArticle(index, article)\r\n      )\r\n    }\r\n  }\r\n}\r\n\r\nexport default News\r\n","//const API_KEY = '8b9495da70cd4b10a74b003961c379c9'\r\n//const API_ROOT = `https://${API_KEY}.mockapi.io`\r\nconst API_ROOT = 'https://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=8b9495da70cd4b10a74b003961c379c9'\r\n\r\nexport const httpGet = async (url) => {\r\n  try {\r\n    const response = await fetch(url)\r\n    if (response.ok || (response.status && response.status === 'ok')) { // MockAPI предоставляет нам свойство \"ok\", на которое мы можем опереться\r\n      const json = await response.json()\r\n      return json\r\n    } else {\r\n      throw new Error(response.status)\r\n    }\r\n  } catch (err) {\r\n    console.warn('httpGet error ', err)\r\n  }\r\n}\r\n\r\n// либо такой же код, без async/await\r\nexport const httpGetWithoutAsync = (endPoint) => {\r\n  return fetch(`${API_ROOT}/${endPoint}`)\r\n    .then(response => response.json())\r\n    .then(json => json)\r\n}","import { httpGet } from '../utils/network'\r\nexport const GET_NEWS_REQUEST = 'GET_NEWS_REQUEST'\r\nexport const GET_NEWS_SUCCESS = 'GET_NEWS_SUCCESS'\r\nexport const GET_NEWS_FAIL = 'GET_NEWS_FAIL'\r\nlet newsArr = []\r\nlet cached = false\r\n\r\nconst newsAPIurl = 'https://newsapi.org/v2/top-headlines?sources=techcrunch&apiKey=8b9495da70cd4b10a74b003961c379c9'\r\n\r\nexport function getNews() {\r\n  return function (dispatch) {\r\n    if (cached) {\r\n      dispatch({\r\n        type: GET_NEWS_SUCCESS,\r\n        payload: {\r\n          data: newsArr\r\n        }\r\n      })\r\n    } else {\r\n      dispatch({\r\n        type: GET_NEWS_REQUEST,\r\n        payload: {\r\n          data: newsArr\r\n        }\r\n      })\r\n      httpGet(newsAPIurl).then(json => {\r\n        newsArr = json.articles\r\n        cached = true\r\n        dispatch({\r\n          type: GET_NEWS_SUCCESS,\r\n          payload: {\r\n            data: newsArr\r\n          }\r\n        })\r\n      }).catch((e) => dispatch({\r\n        type: GET_NEWS_FAIL,\r\n        payload: new Error(e),\r\n        error: true,\r\n      }))\r\n    }\r\n  }\r\n}\r\n\r\n// const testnews = [\r\n//   {\r\n//     \"title\": \"new1\",\r\n//     \"text\": \"something about it.\"\r\n//   },\r\n//   {\r\n//     \"title\": \"test\",\r\n//     \"text\": \"Lets test the news.\"\r\n//   },\r\n// ]","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport News from '../components/News'\r\nimport { getNews } from '../actions/NewsActions'\r\n\r\nclass NewsContainer extends React.Component {\r\n  render() {\r\n    const { newsState, getNews } = this.props\r\n    return <News newsData={newsState} getNews={getNews} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  newsState: state.newsReducer,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getNews: () => dispatch(getNews())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(NewsContainer)","import React from 'react'\r\n\r\nexport default class Profile extends React.Component {\r\n  render() {\r\n    return (<div>\r\n      Профиль пользователя\r\n    </div>)\r\n  }\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport Profile from '../components/Profile'\r\n\r\nclass ProfileContainer extends React.Component {\r\n  render() {\r\n    const { user } = this.props\r\n    return <Profile user={user} />\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  user: state.sessionReducer.user,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileContainer)","const _username = 'admin'\r\nconst _password = '12345'\r\n\r\nexport function checkCredidentials(params) {\r\n  if (\r\n    params.username.toLowerCase() === _username &&\r\n    params.password === _password\r\n  ) {\r\n    return true\r\n  }\r\n  return false\r\n}","import { checkCredidentials } from '../utils/session'\r\n\r\nexport const LOG_IN = 'LOG_IN'\r\nexport const LOG_OUT = 'LOG_OUT'\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE'\r\n\r\nexport function logIn(params, cb) {\r\n  return dispatch => {\r\n    if (checkCredidentials(params)) {\r\n      dispatch({\r\n        type: LOG_IN,\r\n        payload: {\r\n          name: params.username,\r\n        }\r\n      })\r\n      cb()\r\n    } else {\r\n      dispatch({\r\n        type: LOG_IN_FAILURE,\r\n        payload: {\r\n          errorMsg: 'Неверное имя пользователя или пароль',\r\n        },\r\n        error: true,\r\n      })\r\n    }\r\n  }\r\n}\r\n\r\nexport function logOut() {\r\n  return {\r\n    type: LOG_OUT,\r\n  }\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { Button, Form, FormGroup, Label, Input, Col, Alert } from 'reactstrap'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nclass LoginPage extends React.Component {\r\n  state = {\r\n    redirectToPreviousRoute: false,\r\n    username: '',\r\n    password: '',\r\n  }\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const { username, password } = this.state\r\n\r\n    this.props.logIn(\r\n      {\r\n        username,\r\n        password\r\n      },\r\n      () => {\r\n        this.setState({ redirectToPreviousRoute: true })\r\n      }\r\n    )\r\n  }\r\n  handleChange = e => {\r\n    const value = e.currentTarget.value\r\n    const fieldName = e.currentTarget.name\r\n\r\n    this.setState(prev => ({\r\n      ...prev,\r\n      [fieldName]: value,\r\n    }))\r\n  }\r\n  renderForm = () => {\r\n    const { username, password } = this.state\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <FormGroup row>\r\n          <Label for=\"login\" sm={2} >Login</Label>\r\n          <Col sm={5}>\r\n            <Input\r\n              value={username}\r\n              onChange={this.handleChange}\r\n              type=\"text\" name=\"username\" id=\"login\" placeholder=\"UserName\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup row>\r\n          <Label for=\"password\" sm={2} >Password</Label>\r\n          <Col sm={5}>\r\n            <Input\r\n              value={password}\r\n              onChange={this.handleChange}\r\n              type=\"password\" name=\"password\" id=\"password\" placeholder=\"Password\" />\r\n          </Col>\r\n        </FormGroup>\r\n        <FormGroup check row>\r\n          <Col sm={{ size: 10 }}>\r\n            <FormGroup check>\r\n              <Label check>\r\n                <Input type=\"checkbox\" />{' '}\r\n                Confirm\r\n              </Label>\r\n            </FormGroup>\r\n          </Col>\r\n        </FormGroup>\r\n        <hr />\r\n        <FormGroup check row>\r\n          <Col sm={{ size: 10 }}>\r\n            <Button type=\"submit\">Submit</Button>\r\n          </Col>\r\n        </FormGroup>\r\n      </Form>\r\n    )\r\n  }\r\n  render() {\r\n    const { location, errorMsg } = this.props\r\n    const { from, errorMsg: errorMsg2 } = location.state || { from: { pathname: '/' } }\r\n    const { redirectToPreviousRoute } = this.state\r\n    if (redirectToPreviousRoute) {\r\n      return <Redirect to={from} />\r\n    }\r\n    return (\r\n      <React.Fragment>\r\n        {(errorMsg || errorMsg2) &&\r\n          <Alert color=\"danger\">{(errorMsg || errorMsg2)}</Alert>\r\n        }\r\n        {this.renderForm()}\r\n      </React.Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nLoginPage.propTypes = {\r\n  logIn: PropTypes.func.isRequired,\r\n  errorMsg: PropTypes.string,\r\n}\r\n\r\nexport default LoginPage","import Home from './components/Home'\r\nimport BookList from './components/BookList'\r\nimport NewsContainer from './containers/NewsContainer'\r\nimport ProfileContainer from './containers/ProfileContainer'\r\nimport LoginContainer from './containers/LoginContainer'\r\nimport About from './components/About'\r\n\r\n// App relative path only in propuction \r\nexport const appProdPath = \"/ReactRouterTestApp\"\r\n\r\nexport const routes = [\r\n  {\r\n    isNavBar: true,\r\n    isExact: true,\r\n    path: '/',\r\n    name: 'На главную',\r\n    component: Home\r\n  },\r\n  {\r\n    isNavBar: true,\r\n    path: '/news',\r\n    name: 'Новости',\r\n    component: NewsContainer\r\n  },\r\n  {\r\n    isNavBar: true,\r\n    path: '/books',\r\n    name: 'Книги',\r\n    component: BookList\r\n  },\r\n  {\r\n    isNavBar: true,\r\n    path: '/movies',\r\n    name: 'Фильмы',\r\n  },\r\n  {\r\n    isNavBar: true,\r\n    path: '/about',\r\n    name: 'О приложении',\r\n    component: About\r\n  },\r\n  {\r\n    isNavBar: false,\r\n    path: '/profile',\r\n    name: 'Профиль',\r\n    component: ProfileContainer,\r\n    isPrivate: true,\r\n  },\r\n  {\r\n    isNavBar: false,\r\n    path: '/login',\r\n    name: 'Войти',\r\n    component: LoginContainer,\r\n  },\r\n]\r\n","import React from 'react'\r\nimport { Alert, NavLink } from 'reactstrap'\r\n\r\nconst About = () => {\r\n  return (\r\n    <div>\r\n      <p> Тестовое приложение. Сделано на ReactJS + Router + Redux + Bootstrap</p>\r\n      <Alert color=\"info\">\r\n        <NavLink href=\"https://github.com/Kirill-Ovc/ReactRouterTestApp\">GitHub</NavLink>\r\n      </Alert>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About","\r\nimport { connect } from 'react-redux'\r\nimport { logIn } from '../actions/SessionActions'\r\nimport LoginPage from '../components/LoginPage'\r\n\r\nconst mapStateToProps = state => ({\r\n  errorMsg: state.sessionReducer.errorMsg,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logIn: (params, cb) => dispatch(logIn(params, cb))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(LoginPage)","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport { appProdPath } from '../routes'\r\n\r\nconst needAuth = 'Необходимо авторизоваться для просмотра этой страницы'\r\nconst appPath = appProdPath\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props =>\r\n        rest.isAuth ? (\r\n          <Component {...props} />\r\n        ) : (\r\n            <Redirect\r\n              to={{\r\n                pathname: appPath + '/login',\r\n                state: {\r\n                  from: props.location,\r\n                  errorMsg: needAuth,\r\n                },\r\n              }}\r\n            />\r\n          )\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    isAuth: state.sessionReducer.user,\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute)","import React from 'react'\r\n\r\nconst NotFound = ({ data }) => {\r\n  return (\r\n    <React.Fragment>\r\n      <h2>Страница не найдена</h2>\r\n      <p>Попробуйте другую</p>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nexport default NotFound","import React from 'react'\r\nimport { Navbar, Nav, NavLink, NavItem } from 'reactstrap'\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavigationBar = (props) => {\r\n  const { appPath } = props\r\n  return (\r\n    <Navbar color=\"light\" light expand=\"sm\">\r\n      <Nav navbar>\r\n        {props.routes.filter(route => route.isNavBar).map((route, index) =>\r\n          <NavItem key={index} >\r\n            <NavLink tag={Link} exact={route.isExact ? 1 : 0} to={appPath + route.path}>{route.name}</NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n      <Nav navbar className=\"ml-auto\">\r\n        {props.routes.filter(route => !route.isNavBar).map((route, index) =>\r\n          <NavItem key={index} >\r\n            <NavLink tag={Link} to={appPath + route.path}>{route.name}</NavLink>\r\n          </NavItem>\r\n        )}\r\n      </Nav>\r\n    </Navbar>\r\n  )\r\n}\r\n\r\nexport default NavigationBar","import React from 'react'\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport PrivateRoute from './containers/PrivateRoute'\nimport NotFound from './components/NotFound'\nimport { routes, appProdPath } from './routes'\nimport NavigationBar from './components/NavigationBar'\n\nconst appPath = appProdPath\n\nconst App = () => {\n  const renderSwitch = () => (\n    <Switch>\n      {routes.map(route => {\n        const RouteType = route.isPrivate ? PrivateRoute : Route\n        return (\n          <RouteType\n            key={route.path}\n            exact={route.isExact}\n            path={appPath + route.path}\n            component={route.component || NotFound}\n          />\n        )\n      })}\n      <Route component={NotFound} />\n    </Switch>\n  );\n  return (\n    <Router>\n      <div>\n        <NavigationBar routes={routes} appPath={appPath} />\n        <hr />\n        <div className=\"centerBlock\">\n          {renderSwitch()}\n        </div>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { LOG_IN, LOG_OUT, LOG_IN_FAILURE } from '../actions/SessionActions'\r\n\r\nconst initialState = {\r\n  user: null,\r\n  errorMsg: '',\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case LOG_IN:\r\n      return {\r\n        ...state,\r\n        user: {\r\n          name: action.payload.name,\r\n        },\r\n        errorMsg: '',\r\n      }\r\n    case LOG_OUT:\r\n      return {\r\n        ...state,\r\n        user: null,\r\n        errorMsg: '',\r\n      }\r\n    case LOG_IN_FAILURE:\r\n      return {\r\n        ...state,\r\n        errorMsg: action.payload.errorMsg,\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","import { GET_NEWS_REQUEST, GET_NEWS_SUCCESS, GET_NEWS_FAIL } from '../actions/NewsActions'\r\n\r\nconst initialState = {\r\n  news: [],\r\n  isLoading: false,\r\n  errorMsg: '',\r\n}\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_NEWS_REQUEST:\r\n      return { ...state, news: action.payload.data, isLoading: true, errorMsg: '' }\r\n    case GET_NEWS_SUCCESS:\r\n      return (action.payload.data.length)\r\n        ? { ...state, news: action.payload.data, isLoading: false, errorMsg: '' }\r\n        : { ...state, news: action.payload.data, isLoading: false, errorMsg: 'Новостей нет' }\r\n    case GET_NEWS_FAIL:\r\n      return { ...state, errorMsg: action.payload.message, isLoading: false }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport sessionReducer from './session'\r\nimport newsReducer from './news'\r\n\r\nexport default combineReducers({\r\n  sessionReducer,\r\n  newsReducer,\r\n})","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { Provider } from 'react-redux'\nimport { createStore, applyMiddleware } from 'redux'\nimport { createLogger } from 'redux-logger'\nimport thunk from 'redux-thunk'\nimport reducer from './reducers'\n\n\nconst middleware = [thunk]\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger())\n}\nconst store = createStore(reducer, applyMiddleware(...middleware))\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n)\n\nserviceWorker.register()\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\n//serviceWorker.unregister()\n"],"sourceRoot":""}